(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(89),i=a(863),{lightningChart:o,AxisTickStrategies:r,LegendBoxBuilders:n,emptyLine:d,SolidFill:l,SolidLine:g,Themes:m}=s,{createOHLCGenerator:h,createProgressiveTraceGenerator:x}=i,u=o({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({theme:m[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfRows:2,numberOfColumns:1}),c=u.getTheme(),w=new Date(2018,0,1),S=w.getTime(),p=u.createChartXY({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:1});p.getDefaultAxisX().setTickStrategy(r.DateTime,(e=>e.setDateOrigin(w))),p.setTitle("Trading dashboard").setAutoCursor((e=>{e.setTickMarkerYVisible(!1),e.setGridStrokeYStyle(d)})).setPadding({right:40}),u.setRowHeight(0,2);const y=p.addLegendBox(n.VerticalLegendBox).setAutoDispose({type:"max-width",maxWidth:.3});let b;const R=p.getDefaultAxisY().setScrollStrategy(void 0).setTitle("USD").setThickness(80),T=p.addAreaRangeSeries({yAxis:R}).setLowFillStyle(c.examples.bollingerFillStyle).setHighFillStyle(c.examples.bollingerFillStyle).setLowStrokeStyle(new g({thickness:1,fillStyle:c.examples.bollingerBorderFillStyle})).setHighStrokeStyle(new g({thickness:1,fillStyle:c.examples.bollingerBorderFillStyle})).setName("Bollinger band").setCursorEnabled(!1),k=p.addOHLCSeries({yAxis:R}).setName("Candle-Sticks").setFigureWidth(5),f=e=>{k.add(e),T.add({position:e[0],high:e[2]-.2,low:e[3]+.2})},A=864e4;h().setNumberOfPoints(100).generate().toPromise().then((e=>e.map((e=>(e[0]=S+e[0]*A,e))))).then((e=>e.map((e=>(e[0]=e[0]-S,e))))).then((e=>{e.forEach(f),b()}));const L=u.createChartXY({columnIndex:0,rowIndex:1,columnSpan:1,rowSpan:1});L.getDefaultAxisX().setTickStrategy(r.DateTime,(e=>e.setDateOrigin(w))),L.setTitle("Volume").setPadding({right:40});const C=L.addLegendBox(n.VerticalLegendBox).setAutoDispose({type:"max-width",maxWidth:.3}),D=L.getDefaultAxisY().setTitle("USD").setThickness(80),F=L.addAreaSeries({yAxis:D}).setName("Volume");x().setNumberOfPoints(990).generate().toPromise().then((e=>e.map((e=>({x:S+e.x*A,y:10*Math.abs(e.y)}))))).then((e=>e.map((e=>({x:e.x-S,y:e.y}))))).then((e=>{F.add(e),b()})),y.add(p),C.add(L),b=()=>{const e={min:T.getYMin(),max:T.getYMax(),range:T.getYMax()-T.getYMin()},t={min:F.getYMin(),max:F.getYMax(),range:F.getYMax()-F.getYMin()};D.setInterval({start:t.min,end:t.max,stopAxisAfter:!1}),R.setInterval({start:e.min-.33*e.range,end:e.max,stopAxisAfter:!1})},k.setCursorResultTableFormatter(((e,t,a)=>e.addRow(t.getName()).addRow(t.axisX.formatValue(a.getPosition())).addRow("Open "+a.getOpen().toFixed(2)).addRow("High "+a.getHigh().toFixed(2)).addRow("Low "+a.getLow().toFixed(2)).addRow("Close "+a.getClose().toFixed(2)))),F.setCursorResultTableFormatter(((e,t,a,s,i)=>e.addRow(t.getName()).addRow(t.axisX.formatValue(a)).addRow("Value "+Math.round(s)).addRow("Base "+Math.round(i))))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);