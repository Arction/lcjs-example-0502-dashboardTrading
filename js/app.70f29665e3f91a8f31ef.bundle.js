(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),i=a(613),{lightningChart:n,AxisTickStrategies:r,LegendBoxBuilders:l,emptyLine:o,SolidFill:d,SolidLine:m,Themes:g}=s,{createOHLCGenerator:h,createProgressiveTraceGenerator:x}=i,c=n({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Dashboard({theme:g[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0,numberOfRows:2,numberOfColumns:1}),S=c.getTheme(),u=new Date(2018,0,1),p=u.getTime(),y=c.createChartXY({columnIndex:0,rowIndex:0,columnSpan:1,rowSpan:1});y.getDefaultAxisX().setTickStrategy(r.DateTime,(e=>e.setDateOrigin(u))),y.setTitle("Trading dashboard").setCursor((e=>{e.setTickMarkerYVisible(!1),e.setGridStrokeYStyle(o)})),c.setRowHeight(0,2);const w=y.addLegendBox(l.VerticalLegendBox).setAutoDispose({type:"max-width",maxWidth:.3});let b;const k=y.getDefaultAxisY().setScrollStrategy(void 0).setTitle("USD").setThickness(80),T=y.addAreaRangeSeries({yAxis:k}).setLowFillStyle(S.examples.bollingerFillStyle).setHighFillStyle(S.examples.bollingerFillStyle).setLowStrokeStyle(new m({thickness:1,fillStyle:S.examples.bollingerBorderFillStyle})).setHighStrokeStyle(new m({thickness:1,fillStyle:S.examples.bollingerBorderFillStyle})).setName("Bollinger band").setCursorEnabled(!1),A=y.addOHLCSeries({yAxis:k}).setName("Candle-Sticks").setFigureWidth(5),f=e=>{A.add(e),T.add({position:e[0],high:e[2]-.2,low:e[3]+.2})},D=864e4;h().setNumberOfPoints(100).generate().toPromise().then((e=>e.map((e=>(e[0]=p+e[0]*D,e))))).then((e=>e.map((e=>(e[0]=e[0]-p,e))))).then((e=>{e.forEach(f),b()}));const L=c.createChartXY({columnIndex:0,rowIndex:1,columnSpan:1,rowSpan:1});L.getDefaultAxisX().setTickStrategy(r.DateTime,(e=>e.setDateOrigin(u))),L.setTitle("Volume");const Y=L.addLegendBox(l.VerticalLegendBox).setAutoDispose({type:"max-width",maxWidth:.3}),C=L.getDefaultAxisY().setTitle("USD").setThickness(80),B=L.addAreaSeries({yAxis:C}).setName("Volume");x().setNumberOfPoints(990).generate().toPromise().then((e=>e.map((e=>({x:p+e.x*D,y:10*Math.abs(e.y)}))))).then((e=>e.map((e=>({x:e.x-p,y:e.y}))))).then((e=>{B.add(e),b()})),w.add(y),Y.add(L),b=()=>{const e={min:T.getYMin(),max:T.getYMax(),range:T.getYMax()-T.getYMin()},t={min:B.getYMin(),max:B.getYMax(),range:B.getYMax()-B.getYMin()};C.setInterval({start:t.min,end:t.max,stopAxisAfter:!1}),k.setInterval({start:e.min-.33*e.range,end:e.max,stopAxisAfter:!1})}}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);